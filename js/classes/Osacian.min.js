!function(s){var i=function(s,t){var o=(s.coq.inputter,s.coq.collider),h=s.coq.entities,e={pos:{x:0,y:0},size:{x:25,y:25},vec:{x:0,y:0},acceleration:.4,friction:.87,maxSpeed:10,zindex:100,style:"human",visible:!0,team:1};for(var l in e)this[l]="undefined"==typeof t[l]?e[l]:t[l];this.shotCooldown=0,this.shotCooldownMax=30,this.health=3,this.zindex=1e3,this.boundingBox=s.coq.collider.CIRCLE,this.player=null,this.speed=.5,this.maxSpeed=3,this.wallCollisions={up:!1,down:!1,left:!1,right:!1},this.draw=function(i){this.visible&&(this.visible=!1,i.strokeStyle=s.settings.color_osacian,i.beginPath(),i.arc(this.pos.x+this.size.x/2,this.pos.y+this.size.y/2,this.size.x/2,0,2*Math.PI),i.closePath(),i.stroke(),this.player&&(i.fillStyle=s.settings.color_osacian,i.fill()))},this.update=function(){if(this.visible=!0,(this.wallCollisions.left===!1&&this.vec.x<0||this.wallCollisions.right===!1&&this.vec.x>0)&&this.pos.x+this.vec.x>=0&&this.pos.x+this.vec.x+this.size.y<=s.coq.renderer.worldSize.x&&(this.pos.x+=this.vec.x),(this.wallCollisions.up===!1&&this.vec.y<0||this.wallCollisions.down===!1&&this.vec.y>0)&&this.pos.y+this.vec.y>=0&&this.pos.y+this.vec.y+this.size.y<=s.coq.renderer.worldSize.y&&(this.pos.y+=this.vec.y),this.player){if(this.dist=Math.sqrt(Math.pow(this.player.pos.y-this.pos.y,2)+Math.pow(this.player.pos.x-this.pos.x,2)),this.dist>50){var i=Math.atan2(this.player.pos.y-this.pos.y,this.player.pos.x-this.pos.x);this.vec.x+=this.speed*Math.cos(i),this.vec.y+=this.speed*Math.sin(i)}this.shotCooldown>0&&this.shotCooldown--,0==this.shotCooldown&&(this.shotCooldown=this.shotCooldownMax,h.create(Bullet,{pos:{x:this.pos.x+this.size.x/2,y:this.pos.y+this.size.y/2},angle:Math.atan2(this.player.pos.y+this.player.size.y/2-this.pos.y-this.size.y/2,this.player.pos.x+this.player.size.x/2-this.pos.x-this.size.x/2),type:2,emitter:this}))}this.vec.x*=this.friction,this.vec.y*=this.friction,this.vec.x=Math.min(this.vec.x,this.maxSpeed),this.vec.y=Math.min(this.vec.y,this.maxSpeed)},this.collision=function(s){if(s instanceof GameCollisionBox||s instanceof i){if(s.collided=!0,this.pos.x<=s.pos.x+s.size.x&&this.pos.x+this.size.x/2>s.pos.x+s.size.x)for(;o.isIntersecting(this,s);)this.pos.x+=1,this.vec.x=0;if(this.pos.x+this.size.x>=s.pos.x&&this.pos.x+this.size.x/2<s.pos.x)for(;o.isIntersecting(this,s);)this.pos.x-=1,this.vec.x=0;if(this.pos.y<=s.pos.y+s.size.y&&this.pos.y+this.size.y/2>s.pos.y)for(;o.isIntersecting(this,s);)this.pos.y+=1,this.vec.y=0;if(this.pos.y+this.size.y>=s.pos.y&&this.pos.y+this.size.y/2<s.pos.y)for(;o.isIntersecting(this,s);)this.pos.y-=1,this.vec.y=0}},this.uncollision=function(s){s instanceof GameCollisionBox&&(s.collided=!1,s==this.wallCollisions.up&&(this.wallCollisions.up=!1),s==this.wallCollisions.down&&(this.wallCollisions.down=!1),s==this.wallCollisions.left&&(this.wallCollisions.left=!1),s==this.wallCollisions.right&&(this.wallCollisions.right=!1))},this.hitByBullet=function(s){s&&this.noticePlayer(s),this.team&&game.alertOsacians(this.team),this.health--,0===this.health&&h.destroy(this)},this.noticePlayer=function(s){this.player=s,this.shotCooldown=Math.floor(Math.random()*this.shotCooldownMax)}};s.Osacian=i}(this);